/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cliente.vistas;

import S_Gestion_Pacientes.dto.PersonalDTO;
import S_Gestion_Pacientes.sop_rmi.GestionUsuariosInt;
import java.rmi.RemoteException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Luis Romero - Santiago Cordoba
 */
public class GUIRegistrarUsuario extends javax.swing.JFrame {

    /**
     * Creates new form GUIRegistrarUsuario
     */
    
    private static GestionUsuariosInt objRemotoU1;
    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
    
    public GUIRegistrarUsuario(GestionUsuariosInt objRemotoU) {
        objRemotoU1 = objRemotoU;
        initComponents();
        this.setLocationRelativeTo(null);
    }
    
    public GUIRegistrarUsuario() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbRegistrarPersonal = new javax.swing.JLabel();
        btnAtrasRegistrarPersonal = new javax.swing.JButton();
        txtRegistrarIdentificacion = new javax.swing.JTextField();
        lbIdentificacion = new javax.swing.JLabel();
        cbxRegistrarTipoID = new javax.swing.JComboBox<>();
        lbTipoID = new javax.swing.JLabel();
        txtRegistrarNombreCompleto = new javax.swing.JTextField();
        lbNombreCompleto = new javax.swing.JLabel();
        lbOcupacion = new javax.swing.JLabel();
        txtRegistrarNombreUsuario = new javax.swing.JTextField();
        lbNombreUsuario = new javax.swing.JLabel();
        txtRegistrarContrasena = new javax.swing.JPasswordField();
        lbContrasena = new javax.swing.JLabel();
        btnRegistrarPersonal = new javax.swing.JButton();
        cbxRegistrarOcupacion = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        dcRegistrarFechaIngreso = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbRegistrarPersonal.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 24)); // NOI18N
        lbRegistrarPersonal.setText("Registrar Personal");

        btnAtrasRegistrarPersonal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/atras.png"))); // NOI18N
        btnAtrasRegistrarPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasRegistrarPersonalActionPerformed(evt);
            }
        });

        txtRegistrarIdentificacion.setText("123456789");
        txtRegistrarIdentificacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRegistrarIdentificacionKeyTyped(evt);
            }
        });

        lbIdentificacion.setText("Identificación:");

        cbxRegistrarTipoID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C.C.", "T.I.", "P.P.", " " }));

        lbTipoID.setText("Tipo de ID:");

        txtRegistrarNombreCompleto.setText("ejemplo");

        lbNombreCompleto.setText("Nombre Completo: ");

        lbOcupacion.setText("Ocupación:");

        txtRegistrarNombreUsuario.setText("ejemplo123");

        lbNombreUsuario.setText("Nombre de Usuario:");

        txtRegistrarContrasena.setText("ejemplo123");

        lbContrasena.setText("Contraseña:");

        btnRegistrarPersonal.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 11)); // NOI18N
        btnRegistrarPersonal.setText("Registrar Personal");
        btnRegistrarPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarPersonalActionPerformed(evt);
            }
        });

        cbxRegistrarOcupacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Medico Especialista", "Psicologo", "Fisioterapeuta", "Recepcionista-Admin" }));

        jLabel1.setText("Fecha de Ingreso:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAtrasRegistrarPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 69, Short.MAX_VALUE)
                        .addComponent(lbRegistrarPersonal)
                        .addGap(67, 67, 67))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbOcupacion)
                                    .addComponent(lbNombreUsuario)
                                    .addComponent(lbContrasena))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtRegistrarNombreUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                                    .addComponent(txtRegistrarContrasena)
                                    .addComponent(cbxRegistrarOcupacion, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbIdentificacion)
                                    .addComponent(lbTipoID)
                                    .addComponent(lbNombreCompleto)
                                    .addComponent(jLabel1))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtRegistrarNombreCompleto, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                                    .addComponent(cbxRegistrarTipoID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtRegistrarIdentificacion)
                                    .addComponent(dcRegistrarFechaIngreso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(btnRegistrarPersonal)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAtrasRegistrarPersonal)
                .addGap(12, 12, 12)
                .addComponent(lbRegistrarPersonal)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxRegistrarTipoID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTipoID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRegistrarIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbIdentificacion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRegistrarNombreCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNombreCompleto))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcRegistrarFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbOcupacion)
                    .addComponent(cbxRegistrarOcupacion, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRegistrarNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNombreUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRegistrarContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbContrasena))
                .addGap(18, 18, 18)
                .addComponent(btnRegistrarPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtrasRegistrarPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasRegistrarPersonalActionPerformed
        Object[] opciones = {"Aceptar", "Cancelar"};
        int eleccion = JOptionPane.showOptionDialog(rootPane, "¿Esta seguro que desea salir del registrar?", "Mensaje de Confirmación",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, opciones, "Aceptar");
        if (eleccion == JOptionPane.YES_OPTION) {
            new GUIAdministrador(objRemotoU1).setVisible(true);
            super.dispose();
        }
    }//GEN-LAST:event_btnAtrasRegistrarPersonalActionPerformed

    private void btnRegistrarPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarPersonalActionPerformed
        if (objRemotoU1 == null) {
            JOptionPane.showMessageDialog(null, "No hay conexion con el servidor.");
        }else{
            try{
                if (txtRegistrarIdentificacion.getText().equals("") && txtRegistrarNombreCompleto.getText().equals("") && txtRegistrarNombreUsuario.getText().equals("") && txtRegistrarContrasena.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "No pueden haber campos vacios.");
                }else{
                    String tipoID = (String) cbxRegistrarTipoID.getSelectedItem();
                    int ID = Integer.parseInt(txtRegistrarIdentificacion.getText());
                    String nombreCompleto = txtRegistrarNombreCompleto.getText();
                    Date fechaIngreso = dcRegistrarFechaIngreso.getDate();
                    String fecha_cambiada = String.valueOf(fechaIngreso);
                    String tipoRol = (String) cbxRegistrarOcupacion.getSelectedItem();
                    String usuario = txtRegistrarNombreUsuario.getText();
                    String contrasena = txtRegistrarContrasena.getText();
                    PersonalDTO objUsuario = new PersonalDTO(tipoID, ID, nombreCompleto, fecha_cambiada, tipoRol, usuario, contrasena);
                    boolean IdValido = objRemotoU1.validarId(ID);
                    
                    if (IdValido != true) {
                        boolean UsuarioValido = objRemotoU1.validarUsuario(usuario,contrasena);
                        
                        if (objRemotoU1.validarLimitePersonal(tipoRol) == true) {
                            if (UsuarioValido != true) {
                                if (validarAlfanumerico(usuario) && validarAlfanumerico(contrasena)) {
                                    if (usuario.length() >= 8 && contrasena.length() >= 8) {
                                        boolean valor = objRemotoU1.registrarPersonal(objUsuario);
                                        if (valor) {
                                            JOptionPane.showMessageDialog(null, "Registro realizado correctamente.");
                                            new GUIAdministrador(objRemotoU1).setVisible(true);
                                            super.dispose();
                                        } else {
                                            JOptionPane.showMessageDialog(null, "Error al registrar un nuevo usuario.");
                                        } 
                                    } else {
                                        JOptionPane.showMessageDialog(null, "El usuario y/o contraseña son de 8 caracteres.");
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "El usuario y/o contraseña deben ser alfanumericas.");
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Ya existe un nombre de usuario registrado de esa manera.");
                            }
                        }else{
                            JOptionPane.showMessageDialog(null, "No hay mas bacantes disponibles.");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Ya existe un ID registrado con ese numero.");
                    }
                }
            }catch(RemoteException ex){
                JOptionPane.showMessageDialog(null, "La operacion no se pudo completar, intente nuevamente.");
            }
        }
    }//GEN-LAST:event_btnRegistrarPersonalActionPerformed

    private void txtRegistrarIdentificacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRegistrarIdentificacionKeyTyped
        char validarNumero = evt.getKeyChar();
        if (Character.isLetter(validarNumero)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Solo se permite ingresar numeros");
        }
    }//GEN-LAST:event_txtRegistrarIdentificacionKeyTyped

    public boolean validarAlfanumerico(String texto) {
        boolean bandera = false;
        char textoIngresado;
        byte conNumero = 0, conLetra = 0;
        for (byte i = 0; i < texto.length(); i++) {
            textoIngresado = texto.charAt(i);
            String aux = String.valueOf(textoIngresado);

            if (aux.matches("[a-z]") || aux.matches("[A-Z]")) {
                conLetra++;
            } else if (aux.matches("[0-9]")) {
                conNumero++;
            }
        }
        if (conNumero > 0 && conLetra > 0) {
            bandera = true;
        }

        return bandera;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIRegistrarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIRegistrarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIRegistrarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIRegistrarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run(){            
                new GUIRegistrarUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtrasRegistrarPersonal;
    private javax.swing.JButton btnRegistrarPersonal;
    private javax.swing.JComboBox<String> cbxRegistrarOcupacion;
    private javax.swing.JComboBox<String> cbxRegistrarTipoID;
    private com.toedter.calendar.JDateChooser dcRegistrarFechaIngreso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbContrasena;
    private javax.swing.JLabel lbIdentificacion;
    private javax.swing.JLabel lbNombreCompleto;
    private javax.swing.JLabel lbNombreUsuario;
    private javax.swing.JLabel lbOcupacion;
    private javax.swing.JLabel lbRegistrarPersonal;
    private javax.swing.JLabel lbTipoID;
    private javax.swing.JPasswordField txtRegistrarContrasena;
    private javax.swing.JTextField txtRegistrarIdentificacion;
    private javax.swing.JTextField txtRegistrarNombreCompleto;
    private javax.swing.JTextField txtRegistrarNombreUsuario;
    // End of variables declaration//GEN-END:variables
}
