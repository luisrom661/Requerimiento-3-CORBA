/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cliente.vistas;

import S_Gestion_Pacientes.dto.FRCP01FormatoDTO;
import S_Gestion_Pacientes.sop_rmi.GestionInformesInt;
import S_Gestion_Pacientes.sop_rmi.GestionUsuariosInt;
import S_Seguimiento_Pacientes.sop_rmi.GestionNotificacionesInt;
import java.rmi.RemoteException;
import java.util.Date;
import javax.swing.JOptionPane;
import Cliente.sop_rmi.AdminCllbckImpl;
import Cliente.sop_rmi.AdminCllbckInt;
import S_Seguimiento_Pacientes.dto.FRCP01FormatoSMDTO;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Luis Romero - Santiago Cordoba
 */
public class GUIRegistrarFormatoFRCP01 extends javax.swing.JFrame {

    /**
     * Creates new form GUIRegistrarFormatoFRCP01
     */
    private static GestionUsuariosInt objRemotoU1;
    private static GestionInformesInt objRemotoI1;
    private static GestionNotificacionesInt objNotificaciones;
    private static AdminCllbckInt objAdmin;
    
    public GUIRegistrarFormatoFRCP01(GestionUsuariosInt objRemotoU, GestionInformesInt objRemotoI) {
        objRemotoU1 = objRemotoU;
        objRemotoI1 = objRemotoI;
        initComponents();
    }
    
    public GUIRegistrarFormatoFRCP01(GestionInformesInt objRemotoI) {
        objRemotoI1 = objRemotoI;
        initComponents();
    }
    
    public GUIRegistrarFormatoFRCP01() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlRegistrarFormatoFRCP01 = new javax.swing.JPanel();
        lbNombreCompleto = new javax.swing.JLabel();
        lbFechaIngreso = new javax.swing.JLabel();
        txtOrdenApoyoPaciente = new javax.swing.JTextField();
        lbOrdenApoyo = new javax.swing.JLabel();
        lbRegistrarPaciente = new javax.swing.JLabel();
        lbHistoriaClinica = new javax.swing.JLabel();
        btnAtras = new javax.swing.JButton();
        txtHistoriaClinicaPaciente = new javax.swing.JTextField();
        lbIdentificacion = new javax.swing.JLabel();
        txtIdentificacionPaciente = new javax.swing.JTextField();
        txtNombreCompletoPaciente = new javax.swing.JTextField();
        btnRegistrarPaciente = new javax.swing.JButton();
        dtFechaIngreso = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbNombreCompleto.setText("Nombre Completo:");

        lbFechaIngreso.setText("Fecha de Ingreso:");

        lbOrdenApoyo.setText("Orden de Apoyo de la EPS:");

        lbRegistrarPaciente.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 24)); // NOI18N
        lbRegistrarPaciente.setText("Registrar Formato FRCP-01");

        lbHistoriaClinica.setText("Historia Clinica:");

        btnAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/atras.png"))); // NOI18N
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        lbIdentificacion.setText("Identificaci√≥n:");

        txtIdentificacionPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdentificacionPacienteKeyTyped(evt);
            }
        });

        btnRegistrarPaciente.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 11)); // NOI18N
        btnRegistrarPaciente.setText("Registrar Paciente");
        btnRegistrarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarPacienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlRegistrarFormatoFRCP01Layout = new javax.swing.GroupLayout(pnlRegistrarFormatoFRCP01);
        pnlRegistrarFormatoFRCP01.setLayout(pnlRegistrarFormatoFRCP01Layout);
        pnlRegistrarFormatoFRCP01Layout.setHorizontalGroup(
            pnlRegistrarFormatoFRCP01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRegistrarFormatoFRCP01Layout.createSequentialGroup()
                .addGap(0, 38, Short.MAX_VALUE)
                .addComponent(lbRegistrarPaciente)
                .addGap(36, 36, 36))
            .addGroup(pnlRegistrarFormatoFRCP01Layout.createSequentialGroup()
                .addGroup(pnlRegistrarFormatoFRCP01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRegistrarFormatoFRCP01Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlRegistrarFormatoFRCP01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlRegistrarFormatoFRCP01Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(pnlRegistrarFormatoFRCP01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbIdentificacion)
                                    .addComponent(lbNombreCompleto)
                                    .addGroup(pnlRegistrarFormatoFRCP01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(pnlRegistrarFormatoFRCP01Layout.createSequentialGroup()
                                            .addComponent(lbHistoriaClinica)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                                            .addComponent(txtHistoriaClinicaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(pnlRegistrarFormatoFRCP01Layout.createSequentialGroup()
                                            .addGroup(pnlRegistrarFormatoFRCP01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lbOrdenApoyo)
                                                .addComponent(lbFechaIngreso))
                                            .addGap(26, 26, 26)
                                            .addGroup(pnlRegistrarFormatoFRCP01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtOrdenApoyoPaciente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                                .addComponent(txtNombreCompletoPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                                .addComponent(txtIdentificacionPaciente)
                                                .addComponent(dtFechaIngreso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))))
                    .addGroup(pnlRegistrarFormatoFRCP01Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(btnRegistrarPaciente)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlRegistrarFormatoFRCP01Layout.setVerticalGroup(
            pnlRegistrarFormatoFRCP01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistrarFormatoFRCP01Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lbRegistrarPaciente)
                .addGap(33, 33, 33)
                .addGroup(pnlRegistrarFormatoFRCP01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbIdentificacion)
                    .addComponent(txtIdentificacionPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRegistrarFormatoFRCP01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNombreCompleto)
                    .addComponent(txtNombreCompletoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlRegistrarFormatoFRCP01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRegistrarFormatoFRCP01Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(lbFechaIngreso)
                        .addGap(33, 33, 33))
                    .addGroup(pnlRegistrarFormatoFRCP01Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(dtFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(pnlRegistrarFormatoFRCP01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbOrdenApoyo)
                    .addComponent(txtOrdenApoyoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRegistrarFormatoFRCP01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtHistoriaClinicaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbHistoriaClinica))
                .addGap(32, 32, 32)
                .addComponent(btnRegistrarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlRegistrarFormatoFRCP01, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlRegistrarFormatoFRCP01, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarPacienteActionPerformed
        if (objRemotoI1 == null) {
            JOptionPane.showMessageDialog(null, "No hay conexion con el servidor.");
        } else {
            if (txtIdentificacionPaciente.getText().equals("") && txtNombreCompletoPaciente.getText().equals("") && txtOrdenApoyoPaciente.getText().equals("") && txtHistoriaClinicaPaciente.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "No pueden haber espacion vacios");
            } else {
                try{
                    int idPaciente = Integer.parseInt(txtIdentificacionPaciente.getText());
                    String nombreCompleto = txtNombreCompletoPaciente.getText();
                    Date fechaIngreso = dtFechaIngreso.getDate();
                    String fecha_cambiada = String.valueOf(fechaIngreso);
                    String ordenApoyo = txtOrdenApoyoPaciente.getText();
                    String historiaClinica = txtHistoriaClinicaPaciente.getText();
                    FRCP01FormatoDTO objFormato01 = new FRCP01FormatoDTO(idPaciente, nombreCompleto, fecha_cambiada, ordenApoyo, historiaClinica);
                    
                    int IdValido = objRemotoI1.validarIdPaciente(idPaciente);
                    if (IdValido != idPaciente) {
                        boolean valor = objRemotoI1.registrarFormatoFRCP01(objFormato01);
                        if (valor) {
                            JOptionPane.showMessageDialog(null, "Registro realizado correctamente"); 
                            AdminCllbckImpl objCllbck = new AdminCllbckImpl();
                            objRemotoI1.registrarCallback(objCllbck);
                            objRemotoI1.enviarMensaje(nombreCompleto);
                            
                            new GUIOpcionesAdminRecep(objRemotoU1, objRemotoI1).setVisible(true);
                            super.dispose();
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "EL paciente con el id " + idPaciente + " ya existe. ");
                    }
                    
                }catch(RemoteException ex){
                    JOptionPane.showMessageDialog(null, "La operacion no se pudo completar, intente nuevamente...");
                } catch (IOException ex) {
                    Logger.getLogger(GUIRegistrarFormatoFRCP01.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnRegistrarPacienteActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        Object[] opciones = {"Aceptar", "Cancelar"};
        int eleccion = JOptionPane.showOptionDialog(rootPane, "¬øEsta seguro que desea salir del registrar?", "Mensaje de Confirmacion",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, opciones, "Aceptar");
        if (eleccion == JOptionPane.YES_OPTION) {
            new GUIOpcionesAdminRecep(objRemotoU1, objRemotoI1).setVisible(true);
            super.dispose();
        } else {
        }
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void txtIdentificacionPacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdentificacionPacienteKeyTyped
        char validarNumero = evt.getKeyChar();
        if (Character.isLetter(validarNumero)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Solo se permite ingresar n√∫meros.");
        }
    }//GEN-LAST:event_txtIdentificacionPacienteKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIRegistrarFormatoFRCP01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIRegistrarFormatoFRCP01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIRegistrarFormatoFRCP01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIRegistrarFormatoFRCP01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIRegistrarFormatoFRCP01().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnRegistrarPaciente;
    private com.toedter.calendar.JDateChooser dtFechaIngreso;
    private javax.swing.JLabel lbFechaIngreso;
    private javax.swing.JLabel lbHistoriaClinica;
    private javax.swing.JLabel lbIdentificacion;
    private javax.swing.JLabel lbNombreCompleto;
    private javax.swing.JLabel lbOrdenApoyo;
    private javax.swing.JLabel lbRegistrarPaciente;
    private javax.swing.JPanel pnlRegistrarFormatoFRCP01;
    private javax.swing.JTextField txtHistoriaClinicaPaciente;
    private javax.swing.JTextField txtIdentificacionPaciente;
    private javax.swing.JTextField txtNombreCompletoPaciente;
    private javax.swing.JTextField txtOrdenApoyoPaciente;
    // End of variables declaration//GEN-END:variables

}
