/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cliente.vistas;

import S_Gestion_Pacientes.dto.FRCP02FormatoDTO;
import S_Gestion_Pacientes.dto.FRCP03FormatoDTO;
import S_Gestion_Pacientes.sop_rmi.GestionInformesInt;
import S_Gestion_Pacientes.sop_rmi.GestionUsuariosInt;
import java.rmi.RemoteException;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Luis Romero - Santiago Cordoba
 */
public class GUIRegistrarFormatoFRCP03 extends javax.swing.JFrame {

    private static GestionInformesInt objRemotoI1;
    private static GestionUsuariosInt objRemotoU1;
    /**
     * Creates new form GUIRegistrarFormatoFRCP03
     */
    public GUIRegistrarFormatoFRCP03() {
        initComponents();
    }
    
    public GUIRegistrarFormatoFRCP03(GestionInformesInt objRemotoI) {
        objRemotoI1 = objRemotoI;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlRegistrarFormatoFRCP03 = new javax.swing.JPanel();
        lbRegistrarFormatoFRCP02 = new javax.swing.JLabel();
        btnAtras = new javax.swing.JButton();
        lbIdentificacionPaciente = new javax.swing.JLabel();
        txtIdentificacionPaciente = new javax.swing.JTextField();
        txtNumeroFasePaciente = new javax.swing.JTextField();
        lbIdentificacionPaciente1 = new javax.swing.JLabel();
        txtNumeroSesionPaciente = new javax.swing.JTextField();
        lbNumeroSesionPaciente = new javax.swing.JLabel();
        txtPresionArterialPaciente = new javax.swing.JTextField();
        lbPresionArterialPaciente = new javax.swing.JLabel();
        lbFechaSesionPaciente = new javax.swing.JLabel();
        dtFechaSesion = new com.toedter.calendar.JDateChooser();
        txtFrecuenciaCardiacaInicialPaciente = new javax.swing.JTextField();
        lbFrecuenciaCardiacaInicialPaciente = new javax.swing.JLabel();
        lbFrecuenciaCardiacaFinalPaciente = new javax.swing.JLabel();
        txtFrecuenciaCardiacaFinalPaciente = new javax.swing.JTextField();
        lbSaturacionOxigenoPaciente = new javax.swing.JLabel();
        txtSaturacionOxigenoPaciente = new javax.swing.JTextField();
        lbObservacionesPaciente = new javax.swing.JLabel();
        cbxEstadoPaciente = new javax.swing.JComboBox<>();
        lbEstadoPaciente = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObservacionesPaciente = new javax.swing.JTextPane();
        btnRegistrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbRegistrarFormatoFRCP02.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 24)); // NOI18N
        lbRegistrarFormatoFRCP02.setText("Registrar Formato FRCP-03");

        btnAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/atras.png"))); // NOI18N
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        lbIdentificacionPaciente.setText("Identificación del paciente:");

        txtIdentificacionPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdentificacionPacienteKeyTyped(evt);
            }
        });

        txtNumeroFasePaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroFasePacienteKeyTyped(evt);
            }
        });

        lbIdentificacionPaciente1.setText("Número de Fase:");

        txtNumeroSesionPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroSesionPacienteKeyTyped(evt);
            }
        });

        lbNumeroSesionPaciente.setText("Número de Sesion:");

        txtPresionArterialPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPresionArterialPacienteKeyTyped(evt);
            }
        });

        lbPresionArterialPaciente.setText("Presión Arterial:");

        lbFechaSesionPaciente.setText("Fecha de Sesión:");

        txtFrecuenciaCardiacaInicialPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFrecuenciaCardiacaInicialPacienteKeyTyped(evt);
            }
        });

        lbFrecuenciaCardiacaInicialPaciente.setText("Frecuencia Cardiaca Inicial:");

        lbFrecuenciaCardiacaFinalPaciente.setText("Frecuencia Cardiaca Final:");

        txtFrecuenciaCardiacaFinalPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFrecuenciaCardiacaFinalPacienteKeyTyped(evt);
            }
        });

        lbSaturacionOxigenoPaciente.setText("Saturación de Oxigeno:");

        txtSaturacionOxigenoPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSaturacionOxigenoPacienteKeyTyped(evt);
            }
        });

        lbObservacionesPaciente.setText("Observaciones:");

        cbxEstadoPaciente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Deficiente", "Evolucionando", "Estable" }));

        lbEstadoPaciente.setText("Estado del Paciente:");

        jScrollPane1.setViewportView(txtObservacionesPaciente);

        btnRegistrar.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlRegistrarFormatoFRCP03Layout = new javax.swing.GroupLayout(pnlRegistrarFormatoFRCP03);
        pnlRegistrarFormatoFRCP03.setLayout(pnlRegistrarFormatoFRCP03Layout);
        pnlRegistrarFormatoFRCP03Layout.setHorizontalGroup(
            pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistrarFormatoFRCP03Layout.createSequentialGroup()
                .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRegistrarFormatoFRCP03Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlRegistrarFormatoFRCP03Layout.createSequentialGroup()
                                .addComponent(lbIdentificacionPaciente)
                                .addGap(18, 18, 18)
                                .addComponent(txtIdentificacionPaciente))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlRegistrarFormatoFRCP03Layout.createSequentialGroup()
                                .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbSaturacionOxigenoPaciente)
                                    .addComponent(lbEstadoPaciente)
                                    .addComponent(lbObservacionesPaciente))
                                .addGap(36, 36, 36)
                                .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbxEstadoPaciente, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtSaturacionOxigenoPaciente)
                                    .addComponent(jScrollPane1)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlRegistrarFormatoFRCP03Layout.createSequentialGroup()
                                .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbFechaSesionPaciente)
                                    .addComponent(lbIdentificacionPaciente1)
                                    .addComponent(lbNumeroSesionPaciente)
                                    .addComponent(lbPresionArterialPaciente))
                                .addGap(57, 57, 57)
                                .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNumeroFasePaciente)
                                    .addComponent(dtFechaSesion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(pnlRegistrarFormatoFRCP03Layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNumeroSesionPaciente)
                                            .addComponent(txtPresionArterialPaciente)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlRegistrarFormatoFRCP03Layout.createSequentialGroup()
                                .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbFrecuenciaCardiacaInicialPaciente)
                                    .addComponent(lbFrecuenciaCardiacaFinalPaciente))
                                .addGap(18, 18, 18)
                                .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFrecuenciaCardiacaInicialPaciente)
                                    .addComponent(txtFrecuenciaCardiacaFinalPaciente))))
                        .addGap(33, 33, 33)
                        .addComponent(btnRegistrar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRegistrarFormatoFRCP03Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                        .addComponent(lbRegistrarFormatoFRCP02, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlRegistrarFormatoFRCP03Layout.setVerticalGroup(
            pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistrarFormatoFRCP03Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbRegistrarFormatoFRCP02)
                    .addComponent(btnAtras))
                .addGap(19, 19, 19)
                .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbIdentificacionPaciente)
                    .addComponent(txtIdentificacionPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbIdentificacionPaciente1)
                    .addComponent(txtNumeroFasePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dtFechaSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlRegistrarFormatoFRCP03Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lbFechaSesionPaciente)))
                .addGap(18, 18, 18)
                .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNumeroSesionPaciente)
                    .addComponent(txtNumeroSesionPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPresionArterialPaciente)
                    .addComponent(txtPresionArterialPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbFrecuenciaCardiacaInicialPaciente)
                    .addComponent(txtFrecuenciaCardiacaInicialPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbFrecuenciaCardiacaFinalPaciente)
                    .addComponent(txtFrecuenciaCardiacaFinalPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSaturacionOxigenoPaciente)
                    .addComponent(txtSaturacionOxigenoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxEstadoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbEstadoPaciente))
                .addGap(18, 18, 18)
                .addGroup(pnlRegistrarFormatoFRCP03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbObservacionesPaciente)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlRegistrarFormatoFRCP03, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlRegistrarFormatoFRCP03, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        new GUIOpcionesFisio(objRemotoU1, objRemotoI1).setVisible(true);
        super.dispose();
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        if (objRemotoI1 == null) {
            JOptionPane.showMessageDialog(null, "No hay conexion con el servidor.");
        } else {
            if (txtIdentificacionPaciente.getText().equals("") && txtNumeroFasePaciente.getText().equals("") && (dtFechaSesion.getDate() == null) && txtNumeroSesionPaciente.getText().equals("") && txtPresionArterialPaciente.getText().equals("") && txtFrecuenciaCardiacaInicialPaciente.getText().equals("") && txtFrecuenciaCardiacaFinalPaciente.getText().equals("") && txtSaturacionOxigenoPaciente.getText().equals("") && cbxEstadoPaciente.getSelectedItem().equals("") && txtObservacionesPaciente.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "No pueden haber espacios vacíos");
            } else {
                try{
                    int idPaciente = Integer.parseInt(txtIdentificacionPaciente.getText());
                    int numeroFase = Integer.parseInt(txtNumeroFasePaciente.getText());
                    Date fechaSesion = dtFechaSesion.getDate();
                    String fecha_cambiada = String.valueOf(fechaSesion);
                    int numeroSesion = Integer.parseInt(txtNumeroSesionPaciente.getText());
                    int presionArterial = Integer.parseInt(txtPresionArterialPaciente.getText());
                    int frecuenciaArterialInicial = Integer.parseInt(txtFrecuenciaCardiacaInicialPaciente.getText());
                    int frecuenciaArterialFinal = Integer.parseInt(txtFrecuenciaCardiacaFinalPaciente.getText());
                    int saturacionOxigeno = Integer.parseInt(txtSaturacionOxigenoPaciente.getText());
                    String estadoPaciente = (String) cbxEstadoPaciente.getSelectedItem();
                    String observacionesPaciente = txtObservacionesPaciente.getText();
                    FRCP03FormatoDTO objFormato03 = new FRCP03FormatoDTO(idPaciente, numeroFase, fecha_cambiada, numeroSesion, presionArterial, frecuenciaArterialInicial, frecuenciaArterialFinal, saturacionOxigeno, estadoPaciente, observacionesPaciente);
                    int IdValido = objRemotoI1.validarIdPaciente(idPaciente);
                    if (IdValido == idPaciente) {
                        boolean valor = objRemotoI1.registrarFormatoFRCP03(objFormato03);
                        if (valor == true) {
                            JOptionPane.showMessageDialog(null, "Registro realizado correctamente");
                            new GUIOpcionesFisio(objRemotoU1,objRemotoI1).setVisible(true);
                            super.dispose();
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "EL paciente con el id " + idPaciente + " no existe. ");
                    }
                }catch(RemoteException ex){
                    JOptionPane.showMessageDialog(null, "La operacion no se pudo completar, intente nuevamente...");
                }
            }
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void txtIdentificacionPacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdentificacionPacienteKeyTyped
        char validarNumero = evt.getKeyChar();
        if (Character.isLetter(validarNumero)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Solo se permite ingresar números.");
        }
    }//GEN-LAST:event_txtIdentificacionPacienteKeyTyped

    private void txtNumeroFasePacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroFasePacienteKeyTyped
        char validarNumero = evt.getKeyChar();
        if (Character.isLetter(validarNumero)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Solo se permite ingresar números.");
        }
    }//GEN-LAST:event_txtNumeroFasePacienteKeyTyped

    private void txtNumeroSesionPacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroSesionPacienteKeyTyped
        char validarNumero = evt.getKeyChar();
        if (Character.isLetter(validarNumero)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Solo se permite ingresar números.");
        }
    }//GEN-LAST:event_txtNumeroSesionPacienteKeyTyped

    private void txtPresionArterialPacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPresionArterialPacienteKeyTyped
        char validarNumero = evt.getKeyChar();
        if (Character.isLetter(validarNumero)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Solo se permite ingresar números.");
        }
    }//GEN-LAST:event_txtPresionArterialPacienteKeyTyped

    private void txtFrecuenciaCardiacaInicialPacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFrecuenciaCardiacaInicialPacienteKeyTyped
        char validarNumero = evt.getKeyChar();
        if (Character.isLetter(validarNumero)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Solo se permite ingresar números.");
        }
    }//GEN-LAST:event_txtFrecuenciaCardiacaInicialPacienteKeyTyped

    private void txtFrecuenciaCardiacaFinalPacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFrecuenciaCardiacaFinalPacienteKeyTyped
        char validarNumero = evt.getKeyChar();
        if (Character.isLetter(validarNumero)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Solo se permite ingresar números.");
        }
    }//GEN-LAST:event_txtFrecuenciaCardiacaFinalPacienteKeyTyped

    private void txtSaturacionOxigenoPacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaturacionOxigenoPacienteKeyTyped
        char validarNumero = evt.getKeyChar();
        if (Character.isLetter(validarNumero)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Solo se permite ingresar números.");
        }
    }//GEN-LAST:event_txtSaturacionOxigenoPacienteKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIRegistrarFormatoFRCP03.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIRegistrarFormatoFRCP03.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIRegistrarFormatoFRCP03.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIRegistrarFormatoFRCP03.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIRegistrarFormatoFRCP03().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox<String> cbxEstadoPaciente;
    private com.toedter.calendar.JDateChooser dtFechaSesion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbEstadoPaciente;
    private javax.swing.JLabel lbFechaSesionPaciente;
    private javax.swing.JLabel lbFrecuenciaCardiacaFinalPaciente;
    private javax.swing.JLabel lbFrecuenciaCardiacaInicialPaciente;
    private javax.swing.JLabel lbIdentificacionPaciente;
    private javax.swing.JLabel lbIdentificacionPaciente1;
    private javax.swing.JLabel lbNumeroSesionPaciente;
    private javax.swing.JLabel lbObservacionesPaciente;
    private javax.swing.JLabel lbPresionArterialPaciente;
    private javax.swing.JLabel lbRegistrarFormatoFRCP02;
    private javax.swing.JLabel lbSaturacionOxigenoPaciente;
    private javax.swing.JPanel pnlRegistrarFormatoFRCP03;
    private javax.swing.JTextField txtFrecuenciaCardiacaFinalPaciente;
    private javax.swing.JTextField txtFrecuenciaCardiacaInicialPaciente;
    private javax.swing.JTextField txtIdentificacionPaciente;
    private javax.swing.JTextField txtNumeroFasePaciente;
    private javax.swing.JTextField txtNumeroSesionPaciente;
    private javax.swing.JTextPane txtObservacionesPaciente;
    private javax.swing.JTextField txtPresionArterialPaciente;
    private javax.swing.JTextField txtSaturacionOxigenoPaciente;
    // End of variables declaration//GEN-END:variables
}
